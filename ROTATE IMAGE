You are given an n x n 2D matrix representing an image, rotate the image by 90 degrees (clockwise).

You have to rotate the image in-place, which means you have to modify the input 2D matrix directly. DO NOT allocate another 2D matrix and do the rotation.

 

Example 1:


Input: matrix = [[1,2,3],[4,5,6],[7,8,9]]
Output: [[7,4,1],[8,5,2],[9,6,3]]
Example 2:


Input: matrix = [[5,1,9,11],[2,4,8,10],[13,3,6,7],[15,14,12,16]]
Output: [[15,13,2,5],[14,3,4,1],[12,6,8,9],[16,7,10,11]]
 

Constraints:

n == matrix.length == matrix[i].length
1 <= n <= 20
-1000 <= matrix[i][j] <= 1000

*****************************************APPROACH 1 USING EXTRA 2D ARRAY AND COPY THE ELEMENT**********************************************************************

class Solution {
public:
    void rotate(vector<vector<int>>& matrix) {
        
        vector<vector<int>> ans(matrix.size(),vector<int> (matrix.size()));
        
           int column=0;
        
        
        
        for(int i=0;i<ans.size();i++){
            
                int row=matrix.size()-1;
            
            for(int j=0;j<ans[i].size();j++){
                
                ans[i][j]=matrix[row][column];
                
                   row--;
            }
            
            column++;
            
              
        }
        
        
           for(int i=0;i<ans.size();i++){
  
            for(int j=0;j<ans[i].size();j++){
                
                 matrix[i][j]=ans[i][j];
              
            }
            
      
        }
        
    
        
    }
};

*****************************************APPROACH 2 USING INPLACE THE SAME ARRAY***********************************************************************

class Solution {
public:
    void rotate(vector<vector<int>>& nums) {
       
        for(int i=0;i<nums.size();i++){
            
              for(int j=0;j<=i;j++){
                 
                  swap(nums[i][j],nums[j][i]);
                  
              }
            
        }
        
        
          for(int i=0;i<nums.size();i++){
            
              for(int j=0;j<nums[i].size();j++){
                 
                  cout<<nums[i][j]<<" ";
                  
              }
              
            cout<<endl;
        }
        
        
        
        for(int i=0;i<nums.size();i++){
            
              int s=0;
              int e=nums[i].size()-1;
            
            while(s<e){
                
                swap(nums[i][s],nums[i][e]);
                
                s++;
                e--;
            }
            
            
        }
        
        
     
    }
};

