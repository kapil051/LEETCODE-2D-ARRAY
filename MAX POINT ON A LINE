Given an array of points where points[i] = [xi, yi] represents a point on the X-Y plane, return the maximum number of points that lie on the same straight line.

 

Example 1:


Input: points = [[1,1],[2,2],[3,3]]
Output: 3
Example 2:


Input: points = [[1,1],[3,2],[5,3],[4,1],[2,3],[1,4]]
Output: 4
 

Constraints:

1 <= points.length <= 300
points[i].length == 2
-104 <= xi, yi <= 104
All the points are unique.

*********************************************************************************BRUTE FORCE (O(N3))****************************************************************

class Solution {
public:
    int maxPoints(vector<vector<int>>& nums) {
       
        if(nums.size()==1) return 1;
        
           int max_ans=INT_MIN;
        
        for(int i=0;i<nums.size();i++){
            
            for(int j=i+1;j<nums.size();j++){
                
                    int ans=2;
                
                for(int k=0;k<nums.size();k++){
                    
                    if(k==i||k==j) continue;
                  
                    long long x1=nums[i][0],x2=nums[j][0],x3=nums[k][0];
                    long long y1=nums[i][1],y2=nums[j][1],y3=nums[k][1];
                    
                    int diff1=(y2-y1)*(x3-x2);
                    int diff2=(y3-y2)*(x2-x1);
                    
                    if(diff1==diff2) ans++;
                 
                }
               
                max_ans=max(max_ans,ans);
                
            }
            
        }
        
    return max_ans; 
    }
};
